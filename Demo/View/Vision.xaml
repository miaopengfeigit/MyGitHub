<UserControl x:Class="MvvmLight1.View.Vision"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:converter="clr-namespace:Common;assembly=Common" 
             xmlns:myc="clr-namespace:MvvmLight1.Controls"
             xmlns:local="clr-namespace:MvvmLight1.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="800"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <!--<converter:BoolToValueConverter x:Key="BoolToValueConverter" />-->
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <!-- throw in some extra colour for our floating action button -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Green.Named.Primary.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>

    
    <!--<Image Name="image1" Stretch="Fill"   Grid.Row="1" Grid.Column="1" Source="{Binding ImgSourc}"  />-->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        
        <!--<ToolBarTray HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ToolBar>
                        <Button ToolTip="连续读取" Command="{Binding OpenCameraCmd}">
                            <materialDesign:PackIcon Kind="ArrowRightDropCircle" />
                        </Button>
                        <Button ToolTip="特征匹配读取" Command="{Binding MatchTemplateCmd}">
                            <materialDesign:PackIcon Kind="ArrowRightBold" />
                        </Button>
                        <Button ToolTip="停止读取" Command="{Binding StopCameraCmd}">
                            <materialDesign:PackIcon Kind="StopCircle" />
                        </Button>
                        <Button ToolTip="添加区域框" Command="{Binding AddPathCmd}">
                            <materialDesign:PackIcon Kind="PlusCircle" />
                        </Button>
                        <Button ToolTip="感兴趣区域" Command="{Binding RoiCmd}" >
                            <materialDesign:PackIcon Kind="ArrangeBringForward" />
                        </Button>
                    </ToolBar>

                </ToolBarTray>-->


        <!--<Canvas Grid.Row ="1"  Focusable="True" Name="myCanvas"
                Width="{Binding ActualWidth, Mode=Default, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" 
                Height="{Binding ActualHeight, Mode=Default, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}">
                    <Canvas.Background>
                        <ImageBrush ImageSource="{Binding ImgSourc}" />
                    </Canvas.Background>
                </Canvas>-->
        <!--<Canvas Grid.Row ="1" Name="myCanvas">
            <Canvas.Background>
                <ImageBrush ImageSource="{Binding ImgSourc}" />
            </Canvas.Background>
        </Canvas>-->

        <ItemsControl Grid.Row ="1" ItemsSource="{Binding UIElements}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas>
                        <Canvas.Background>
                            <ImageBrush ImageSource="{Binding ImgSourc}" />
                        </Canvas.Background>
                    </Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <!--<ItemsControl Grid.Row="1" ItemsSource="{Binding CanvasVecPicture}" Width="640" Height="480" Margin="0"  >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas >
                                <Canvas.Background>
                                    <ImageBrush ImageSource="{Binding ImgSourc}" />
                                </Canvas.Background>
                                
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Path Stroke="Red" Fill="Transparent" StrokeThickness="1" Data="{Binding MyGeometry}" RenderTransform="{Binding Translate}">
                                <i:Interaction.Behaviors>
                                    <dr:TransformInCanvasBehavior/>
                                </i:Interaction.Behaviors>
                            </Path>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>-->
        
        <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                 HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                                 Margin="32" Grid.Row="1">
            <StackPanel >
                <Button ToolTip="连续读取" Command="{Binding OpenCameraCmd}">
                    <materialDesign:PackIcon Kind="ArrowRightDropCircle" />
                </Button>
                <Button ToolTip="特征匹配读取" Command="{Binding MatchTemplateCmd}">
                    <materialDesign:PackIcon Kind="ArrowRightBold" />
                </Button>
                <Button ToolTip="停止读取" Command="{Binding StopCameraCmd}">
                    <materialDesign:PackIcon Kind="StopCircle" />
                </Button>
                <Button ToolTip="添加区域框" Command="{Binding AddPathCmd}">
                    <materialDesign:PackIcon Kind="PlusCircle" />
                </Button>
                <Button ToolTip="感兴趣区域" Command="{Binding RoiCmd}" >
                    <materialDesign:PackIcon Kind="ArrangeBringForward" />
                </Button>
                <Button ToolTip="打开图片" Command="{Binding SourcePathCmd}" >
                    <materialDesign:PackIcon Kind="FolderOpen" />
                </Button>
            </StackPanel>
        </materialDesign:PopupBox>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center" Grid.Row="1">
            <TextBlock FontWeight="Bold" Text="{Binding SelectPath.RectX,StringFormat='##0.00'}"  Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBlock FontWeight="Bold"  Text=","  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBlock FontWeight="Bold"  Text="{Binding SelectPath.RectY,StringFormat='##0.00'}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>

            <TextBlock FontWeight="Bold"  Text="{Binding SelectPath.RectWidth,StringFormat='##0.00'}"  Margin="20,5,5,5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBlock FontWeight="Bold"  Text="x"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBlock FontWeight="Bold"  Text="{Binding SelectPath.RectHeight,StringFormat='##0.00'}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>

            <!--<TextBlock FontWeight="Bold"  Text="mmm" Visibility= "{Binding ElementName=shao,Path=IsChecked, Converter={StaticResource BoolToValueConverter}, ConverterParameter=Visible, FallbackValue=Collapsed}"/>
            <CheckBox Name="shao"/>
            <TextBlock Text="is" Visibility="{Binding ElementName=shao,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
        </StackPanel>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="1">
            <TextBlock FontWeight="Bold" Text="{Binding Str}"  Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            
        </StackPanel>
        <Image Grid.Row="1" MaxWidth="160" MaxHeight="120" HorizontalAlignment="Right" VerticalAlignment="Top" Source="{Binding RoiSourc}"></Image>

    </Grid>


</UserControl>
